use BigData
go 

select *
from ITENS_NOTAS_FISCAIS 
select * from NOTAS_FISCAIS
select * from TABELA_DE_CLIENTES
select * from TABELA_DE_PRODUTOS
select * from TABELA_DE_VENDEDORES

------------ DESAFIO 1 -------------------

ALTER function fVOLUM(@datas varchar(20))
RETURNS TABLE AS
RETURN
(
select 
TC.CPF								AS 'CPF',
TC.NOME								AS ' NOME',
TC.VOLUME_DE_COMPRA					AS 'VOLUME DE COMPRA',
@datas								AS 'MES ANO',
SUM(NFI.QUANTIDADE)					AS 'QUANTIDADE TOTAL',
	CASE WHEN TC.VOLUME_DE_COMPRA < SUM(NFI.QUANTIDADE) THEN 'VENDAS INVÁLIDAS'
	ELSE 'VENDAS VÁLIDAS' END AS  'RESULTADO'

from TABELA_DE_CLIENTES as TC
	inner join NOTAS_FISCAIS as NF
	on Tc.CPF = NF.CPF -- CPF, NUMERO SUM(@VAR) AS 'SS'
	inner join ITENS_NOTAS_FISCAIS as NFI
	on NFI.NUMERO = NF.NUMERO  
	-- ESSE CPF TEVE TAIS NOTAS FISCAIS, SOME TODAS AS NOTAS FISCAIS DE UM CPF
	inner join TABELA_DE_PRODUTOS as TP
	on TP.CODIGO_DO_PRODUTO = NFI.CODIGO_DO_PRODUTO

WHERE convert(varchar(7), NF.DATA_VENDA) = @datas
GROUP BY TC.CPF,
TC.NOME,             
TC.VOLUME_DE_COMPRA
)

SELECT * FROM fVOLUM('2015-01')
--ORDER BY SUM(NFI.QUANTIDADE) DESC


select *
from ITENS_NOTAS_FISCAIS 
select * from NOTAS_FISCAIS
select * from TABELA_DE_CLIENTES
select * from TABELA_DE_PRODUTOS
select * from TABELA_DE_VENDEDORES

------------ DESAFIO 2 -------------------

SELECT
TP.SABOR AS 'SABOR', -- SELECIONANDO A COLUNA QUE EU QUERO MOSTRAR
'2015' AS ANO, -- APENAS DEFININDO UM VALOR PARA NÃO PRECISAR USAR UM COLUNA E NECESSÁRIAMENTE AGRUPÁ-LA
SUM(INF.QUANTIDADE) AS 'VENDA ANO', -- SOMANDO TODAS AS QUANTIDADES DE UM MESMO PRODUTO VENDIDO
CONVERT(DEC(10, 2), -- CONVERTENTDO PARA FLOAT
(
-- VALOR QUE EU TRANSFO´RMEI EM FLOAT
SUM(INF.QUANTIDADE)* 100)/ -- O PERCENTUAL É O TOTAL DE UMA VENDA VEZES 100 DIVIDIDO PELO TOTAL DE TODAS AS VENDAS
(
	-- QUANDO VC PENSAR QUE UMA VALOR E OU VARIÁVEL SERIA RESULTADOD E UM SELECT, É SÓ USAR UM SELECT
	SELECT -- O TOTAL É RETORNADO POR UM SELECT
	-- CONVERTO O TOTAL RETORNADO PARA FLOAT
	CONVERT(DEC(10, 2), 
	-- TOTAL RETORNADO
	SUM(INF.QUANTIDADE)) AS 'VENDA ANO'
	FROM ITENS_NOTAS_FISCAIS AS INF
	INNER JOIN NOTAS_FISCAIS AS NF
	ON INF.NUMERO = NF.NUMERO
	WHERE CONVERT(VARCHAR(4), NF.DATA_VENDA) = '2015'
)) AS 'PERCENTUAL'

FROM TABELA_DE_PRODUTOS AS TP
INNER JOIN ITENS_NOTAS_FISCAIS AS INF
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
INNER JOIN NOTAS_FISCAIS AS NF
ON INF.NUMERO = NF.NUMERO
WHERE CONVERT(VARCHAR(4), NF.DATA_VENDA) = '2015'
GROUP BY TP.SABOR
ORDER BY SUM(INF.QUANTIDADE) DESC


select *
from ITENS_NOTAS_FISCAIS 
select * from NOTAS_FISCAIS
select * from TABELA_DE_CLIENTES
select * from TABELA_DE_PRODUTOS
select * from TABELA_DE_VENDEDORES

------ PEGAR QAUANTIDADE TOTAL

SELECT
SUM(INF.QUANTIDADE) AS 'QUANTIDADE TOTAL'
FROM ITENS_NOTAS_FISCAIS  AS INF
INNER JOIN  NOTAS_FISCAIS  AS NF
ON INF.NUMERO = NF.NUMERO
WHERE CONVERT(VARCHAR(4), NF.DATA_VENDA) = '2015'

------ OBS ----
-- QUANDO VC PENSAR QUE UMA VALOR E OU VARIÁVEL SERIA RESULTADOD E UM SELECT, É SÓ USAR UM SELECT























--COUNT(EP.IDPessoa) AS "Quantidade Participantes",  -- conta quantos ids uma reunião tem. comnta quantas linhas de acordo com o agrupamento já feito
--CASE WHEN S.Capacidade < COUNT(EP.IDPessoa) THEN 'Ultrapassou o Limite!' -- quando a capacidade vor menor que a quantidade de pessoas convidadas o limite é ultrapassado
--ELSE 'Limite OK' END AS "Avaliação da Capacidade"  -- cria uma coluna  chamada av. de capacidade para exibir os resultados

create function fVolum(@var varchar(30))
return table as 
(
select 
Tc.CPF				    AS 'CPF',
TC.NOME                 AS ' NOME',
TC.VOLUME_DE_COMPRA     AS 'VOLUME DE COMPRA',
NF.DATA_VENDA			AS 'MES ANO',
sum(NIF.QUANTIDADE * NIF.PRECO) AS 'QUANTIDADE TOTAL'
CASE WHEN TC.VOLUME_DE_COMPRA < sum(NFI.QUANTIDADE * NFI.PRECO) THEN 'VENDAS INVÁLIDAS'
ELSE 'VENDAS VÁLIDAS' AS 'RESULTADO'
from TABELA_DE_CLIENTES as TC
inner join NOTAS_FISCAIS as NF
on Tc.CPF = NF.CPF
inner join ITENS_NOTAS_FISCAIS as NFI
on NFI.NUMERO = NF.NUMERO  -- juntei numero e cpf
-- soma do preço do produto do código  vezes a quandtidade de compras para cada numero
inner join TABELA_DE_PRODUTOS as TP
on TP.CODIGO_DO_PRODUTO = NFI.CODIGO_DO_PRODUTO
)


CREATE FUNCTION fTables(@var varchar(50))
RETURNS TABLE AS
	RETURN
	(
	Select TOP 1
	CONVERT(varchar(10), E.DtHrInicio, 103) as 'data',
	E.Descricao
	FROM Evento as E
	where Descricao LIKE '%'+@var+'%'
	order by E.DtHrInicio asc
	)
