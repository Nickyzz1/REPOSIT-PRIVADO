ANOTAÇÕES: 

------- BANCO DE DADOS -------

O QUE É UM BD: É UM SISTEMA PARA ARMAZENAR E GERENCIAR DADOS
PQ USAR UM BD: PARA ARMAZENAR DE FORMA SEGURA AS INFORMAÇÕES E TOMAR DECISÕES ACERTIVAS BEM EMBASADAS
SGBD: SISTEMA DE GERENCIAMENTO DE BANCO DE DADOS:
- MYSQL, SLQ SERVER, ORACLE(+ USADO)

PASSO A PASSO: levantamento de requisitos, mapa conceitual lógico, e físico
ENTIDADES: SÃO COMO CLASSE(TABELAS, EX: CLIENTES...)
ATRIBUTOS: SÃO COMO ATRIBUTOS DE POO(COLUNAS, EX: NOME, GÊNERO, NASCIMENTO...)

MODELOS: É UMA REPRESENTAÇÃO ABSTRATA DE COMO OS DADOS SE RELACIONAM --> RELACIONAL E NÃO RELACIONAL

-----------------------------------------------------

------- MODELO RELACIONAL VS NÃO RELACIONAL -------

RELACIONAL: 
-ORGANIZA DADOS EM TABELAS
-CADA TABELA REPRESENTA UAM ENTIDADE
-COLUNAS SÃO ATRIBUTOS DA ENTIDADE
-AS LINHAS CONTEM OS REGISTROS(TUPLAS)

NÃO RELACIONAL:
- NÃO SEGUE O MODELO DE TABELAS
- ARMAZENA DADOS ATRAVPES DE DOCUMENTOS, GRAFOS, CHAVES-VALOR
- EX: MONGODB, GOOGLE BIG TABLE

RELACIONAMENTOS: SÃO CONEXÕES ENTRE AS ENTIDADES

-----------------------------------------------------

------- MODELAGEM DE DADOS -------

- É UM PROCESSO DE ORGANIZAR E ESTRUTURAR AS RELAÇÕES EM DIAGRAMAS VISUAIS(MER E DER)

ACID: propriedades que garantem a consisteência dos dados
- isolamento: ações ocorrerem separadas umas das outras sem conflitos
- consistência: permite que uma ação ocorra em conformidade. A consistetncia garante que as regras de negócio sejam cumpridas, por exemplo, uma lugar que tem 10 maçãs para vender não pode vender 11 maçãs
- atomicidade : se algo der errado break, não permite que continue se algo der errado (transaction)
- durabilidade: após o commit todas as alterações precisam ficar no banco de dados

ABRSTRAÇÃO:
- UMA DAS ETAPAS É DO MER

MER OU ER: MODELO ENTIDADE RELACIONAMENTO(TEM APENAS O BÁSICO), É UMA DAS ETAPASA DA ABSTRAÇÃO, QUANDO VC FAZ AS RELAÇÕES E O MER
EX: MODELO CONCEITUAL
DER: DIAGRAMA ENTIDADE RELACIONAMENTO, MAIS BEM ELABORADO QUE O MER, É A PARTE GRÁFICA(TIPO DA RELAÇÃO, ATRIBUTOS)
EX: MODELO LÓGICO E FÍSICO

-----------------------------------------------------

------- CAHVES E DADOS -------

CHAVE PRIMÁRIA: 
- PRIMÁRIA:É A CHAVE ID , A IDENTIDADE ÚNICA DE CADA TABELA
- ESTRANGEIRA: É UMA CHAVE QUE REFERÊNCIA OUTRA TABELA

DADO VS INFO:
- DADO : ELEMENTO BRUTO NÃO PROCESSADO
- INFO: RESULTADO DA INTERPRETAÇÃO ASSERTIVA DOS DADOS
CARDINALIDADE : 0,0 - 0,1 - 0,N - 1,N - N,N

INTEGRIDADE: TABELA PAI E FILHO, NÃO PODE SE EXCLUIR A TABELA PAI E DEIXAR A TABELA FILHO 
-----------------------------------------------------

exemplos de herança em modelagem:

  Veículo
   /   \
Carro  Moto

     Animal
     /     \
Mamífero  Réptil


TIPOS DE DADOS EM SQL:

- VARCHAR()
- CHAR
- INT
- BIT
- DATE TIME

CONVERSSÃO:

COVERT(tipoObjetivado, variável, parâmetro opcional)
101 para data en
103 para data brasil
120 para hora


1. COUNT
A função COUNT é usada para contar o número de linhas em um conjunto de resultados.

2. SUM
A função SUM é usada para calcular a soma total de um conjunto de valores.

3. MAX
A função MAX é usada para encontrar o valor máximo em um conjunto de valores.

Combinação das Funções
Você também pode combinar essas funções em uma única consulta para obter diversas métricas:

SELECT Cliente,
       COUNT(*) AS NumeroPedidos,
       SUM(Valor) AS ValorTotal,
       MAX(Valor) AS ValorMaximo
FROM Pedidos
GROUP BY Cliente;



1. Igualdade (=)
Compara se dois valores são iguais.

sql
Copiar código
SELECT * FROM Clientes WHERE Idade = 30;
2. Diferença (<> ou !=)
Compara se dois valores são diferentes.

sql
Copiar código
SELECT * FROM Clientes WHERE Idade <> 30;
-- ou
SELECT * FROM Clientes WHERE Idade != 30;
3. Maior que (>)
Compara se um valor é maior que outro.

sql
Copiar código
SELECT * FROM Clientes WHERE Idade > 30;
4. Menor que (<)
Compara se um valor é menor que outro.

sql
Copiar código
SELECT * FROM Clientes WHERE Idade < 30;
5. Maior ou igual a (>=)
Compara se um valor é maior ou igual a outro.

sql
Copiar código
SELECT * FROM Clientes WHERE Idade >= 30;
6. Menor ou igual a (<=)
Compara se um valor é menor ou igual a outro.

sql
Copiar código
SELECT * FROM Clientes WHERE Idade <= 30;
7. BETWEEN
Verifica se um valor está dentro de um intervalo.

sql
Copiar código
SELECT * FROM Clientes WHERE Idade BETWEEN 25 AND 35;
8. IN
Verifica se um valor está dentro de um conjunto de valores.

sql
Copiar código
SELECT * FROM Clientes WHERE Nome IN ('Alice', 'Bob', 'Charlie');
9. LIKE
Compara se um valor corresponde a um padrão. Comumente usado com caracteres curinga (% e _).

% representa zero ou mais caracteres.
_ representa um único caractere.
sql
Copiar código
SELECT * FROM Clientes WHERE Nome LIKE 'A%';
-- Encontra nomes que começam com 'A'

SELECT * FROM Clientes WHERE Nome LIKE '_lice';
-- Encontra nomes que têm 'lice' como os últimos quatro caracteres, com qualquer primeiro caractere
10. IS NULL e IS NOT NULL
Verifica se um valor é NULL ou não.

sql
Copiar código
SELECT * FROM Clientes WHERE Email IS NULL;
sql
Copiar código
SELECT * FROM Clientes WHERE Email IS NOT NULL;
Exemplo Prático com Tabela
Vamos criar uma tabela Clientes e inserir alguns dados para usar nos exemplos:

sql
Copiar código
CREATE TABLE Clientes (
    ID INT PRIMARY KEY,
    Nome VARCHAR(100),
    Email VARCHAR(100),
    Idade INT
);

INSERT INTO Clientes (ID, Nome, Email, Idade) VALUES
(1, 'Alice', 'alice@example.com', 30),
(2, 'Bob', 'bob@example.com', 25),
(3, 'Charlie', 'charlie@example.com', 35),
(4, 'David', 'david@example.com', 28),
(5, 'Eve', NULL, 40);
Exemplos de Consultas
Igualdade (=):
sql
Copiar código
SELECT * FROM Clientes WHERE Idade = 30;
Diferença (<> ou !=):
sql
Copiar código
SELECT * FROM Clientes WHERE Idade <> 30;
Maior que (>):
sql
Copiar código
SELECT * FROM Clientes WHERE Idade > 30;
Menor que (<):
sql
Copiar código
SELECT * FROM Clientes WHERE Idade < 30;
Maior ou igual a (>=):
sql
Copiar código
SELECT * FROM Clientes WHERE Idade >= 30;
Menor ou igual a (<=):
sql
Copiar código
SELECT * FROM Clientes WHERE Idade <= 30;
BETWEEN:
sql
Copiar código
SELECT * FROM Clientes WHERE Idade BETWEEN 25 AND 35;
IN:
sql
Copiar código
SELECT * FROM Clientes WHERE Nome IN ('Alice', 'Bob', 'Charlie');
LIKE:
sql
Copiar código
SELECT * FROM Clientes WHERE Nome LIKE 'A%';
IS NULL e IS NOT NULL:
sql
Copiar código
SELECT * FROM Clientes WHERE Email IS NULL;
sql
Copiar código
SELECT * FROM Clientes WHERE Email IS NOT NULL;
