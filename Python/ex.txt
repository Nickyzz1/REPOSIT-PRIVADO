Exercício 1: Cadastro de Alunos
Este exercício envolve entrada e saída de informações, tipos de dados, variáveis, operações aritméticas, manipulação de strings, valores booleanos e comparadores, funções, escopo de variáveis, laços de repetição, try-except, manipulação de listas, e manipulação de arquivos.

python
Copiar código
import json

def cadastrar_aluno():
    nome = input("Digite o nome do aluno: ").strip()
    idade = int(input("Digite a idade do aluno: ").strip())
    notas_str = input("Digite as notas do aluno separadas por espaço: ").strip()
    notas = [float(nota) for nota in notas_str.split()]
    media = sum(notas) / len(notas)

    aluno = {
        "nome": nome,
        "idade": idade,
        "notas": notas,
        "media": media
    }
    return aluno

def salvar_alunos(alunos):
    with open('alunos.json', 'w') as file:
        json.dump(alunos, file)

def carregar_alunos():
    try:
        with open('alunos.json', 'r') as file:
            return json.load(file)
    except FileNotFoundError:
        return []

def main():
    alunos = carregar_alunos()
    while True:
        print("\n1. Cadastrar novo aluno")
        print("2. Exibir todos os alunos")
        print("3. Sair")
        escolha = input("Escolha uma opção: ").strip()

        if escolha == '1':
            aluno = cadastrar_aluno()
            alunos.append(aluno)
            salvar_alunos(alunos)
        elif escolha == '2':
            for aluno in alunos:
                print(f"\nNome: {aluno['nome']}")
                print(f"Idade: {aluno['idade']}")
                print(f"Notas: {aluno['notas']}")
                print(f"Média: {aluno['media']:.2f}")
        elif escolha == '3':
            break
        else:
            print("Opção inválida. Tente novamente.")

if __name__ == "__main__":
    main()
Exercício 2: Calculadora Simples
Este exercício envolve entrada e saída de informações, tipos de dados, variáveis, operações aritméticas, formatação e manipulação de strings, valores booleanos e comparadores, funções, escopo de variáveis, laços de repetição, try-except, e estrutura range e comandos continue e break.

python
Copiar código
def calcular(operacao, num1, num2):
    if operacao == '+':
        return num1 + num2
    elif operacao == '-':
        return num1 - num2
    elif operacao == '*':
        return num1 * num2
    elif operacao == '/':
        return num1 / num2
    else:
        return None

def main():
    while True:
        print("\nCalculadora Simples")
        print("Digite 'sair' a qualquer momento para encerrar.")
        
        operacao = input("Digite a operação (+, -, *, /): ").strip()
        if operacao == 'sair':
            break
        
        try:
            num1 = float(input("Digite o primeiro número: ").strip())
            num2 = float(input("Digite o segundo número: ").strip())
        except ValueError:
            print("Entrada inválida. Por favor, digite números válidos.")
            continue
        
        resultado = calcular(operacao, num1, num2)
        if resultado is not None:
            print(f"O resultado de {num1} {operacao} {num2} é {resultado}")
        else:
            print("Operação inválida. Tente novamente.")

if __name__ == "__main__":
    main()
Exercício 3: Gerenciamento de Tarefas
Este exercício envolve entrada e saída de informações, tipos de dados, variáveis, operações aritméticas, formatação e manipulação de strings, valores booleanos e comparadores, funções, escopo de variáveis, laços de repetição, try-except, estrutura range e comandos continue e break, aninhamento de estruturas, manipulação de listas, tuplas e dicionários, e manipulação de arquivos.

python
Copiar código
import json

def carregar_tarefas():
    try:
        with open('tarefas.json', 'r') as file:
            return json.load(file)
    except FileNotFoundError:
        return []

def salvar_tarefas(tarefas):
    with open('tarefas.json', 'w') as file:
        json.dump(tarefas, file)

def adicionar_tarefa(tarefas):
    descricao = input("Digite a descrição da tarefa: ").strip()
    prioridade = input("Digite a prioridade da tarefa (alta, média, baixa): ").strip().lower()
    tarefa = {
        "descricao": descricao,
        "prioridade": prioridade,
        "concluida": False
    }
    tarefas.append(tarefa)

def listar_tarefas(tarefas):
    for i, tarefa in enumerate(tarefas):
        status = "Concluída" if tarefa["concluida"] else "Pendente"
        print(f"{i + 1}. {tarefa['descricao']} - Prioridade: {tarefa['prioridade']} - Status: {status}")

def concluir_tarefa(tarefas):
    try:
        num = int(input("Digite o número da tarefa que deseja concluir: ").strip()) - 1
        if 0 <= num < len(tarefas):
            tarefas[num]["concluida"] = True
        else:
            print("Número inválido.")
    except ValueError:
        print("Entrada inválida. Por favor, digite um número.")

def main():
    tarefas = carregar_tarefas()
    while True:
        print("\n1. Adicionar nova tarefa")
        print("2. Listar todas as tarefas")
        print("3. Concluir tarefa")
        print("4. Sair")
        escolha = input("Escolha uma opção: ").strip()

        if escolha == '1':
            adicionar_tarefa(tarefas)
            salvar_tarefas(tarefas)
        elif escolha == '2':
            listar_tarefas(tarefas)
        elif escolha == '3':
            concluir_tarefa(tarefas)
            salvar_tarefas(tarefas)
        elif escolha == '4':
            break
        else:
            print("Opção inválida. Tente novamente.")

if __name__ == "__main__":
    main()
Esses exercícios cobrem uma ampla gama de competências em Python, proporcionando uma boa prática e avaliação das habilidades listadas.
